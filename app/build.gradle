apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
//// 依赖插件脚本
//apply from: 'tinker-support.gradle'
//mob sdk
def currentModule = rootProject.ext.currentModule
if (1 == currentModule) {
    apply from: 'mob_share.gradle'
}
def isDebug = rootProject.ext.isDebug
def configs = rootProject.ext.android
android {
    compileSdkVersion configs.compileSdkVersion
    defaultConfig {
        applicationId "com.juntai.wisdom.dgjxb"
        minSdkVersion configs.minSdkVersion
        targetSdkVersion configs.targetSdkVersion
        versionCode configs.versionCode
        versionName configs.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        ndk {
            abiFilters "armeabi-v7a"//,"x86"//,"armeabi"////,"arm64-v8a","x86_64"
        }
    }

    signingConfigs {
        release {
            //设置release的签名信息
            //c204528aaa01367971e36f2b06a2dc25
            storeFile file('jingxiaobao.jks')
            storePassword "juntai2254"
            keyAlias "key0"
            keyPassword "jxb3312"
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            //是否优化zip
            zipAlignEnabled true
            // 移除无用的resource文件
            shrinkResources false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
//            shrinkResources false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    //过期api
    lintOptions {
        abortOnError false
    }
    dexOptions {//解决编译内存不足问题
        javaMaxHeapSize "4096M"
    }
    packagingOptions {//解决so文件重复问题，使用第一个
        pickFirst "**/libsqlite.so"
    }

    greendao {
        schemaVersion 1 //数据库版本号
        daoPackage 'com.juntai.wisdom.dgjxb.greenDao'
        targetGenDir 'src/main/java'//设置DaoMaster、DaoSession、Dao目录,请注意，这里路径用/不要用.
        generateTests false //设置为true以自动生成单元测试。
        targetGenDirTests 'src/main/java' //应存储生成的单元测试的基本目录。默认为 src / androidTest / java。
    }
}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    //noinspection GradleCompatible
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation project(':module_Base')
    implementation project(':module_Map')
    implementation project(':module_IM')
    implementation project(':banner')
    implementation project(':module_Video')
    implementation project(':pushpermission')
    implementation 'com.sunfusheng:MarqueeView:1.4.1'//跑马灯
    implementation 'com.github.AlexLiuSheng:CheckVersionLib:2.3.3.1_appcompat'
    implementation project(':RTCLib')
    implementation project(':richeditor')
    implementation "me.leolin:ShortcutBadger:1.1.22@aar"
    implementation project(':videocompressor')
    implementation 'com.afollestad.material-dialogs:core:0.9.6.0'
    //数据库框架
    implementation 'org.greenrobot:greendao:3.2.2'
    implementation 'com.haibin:calendarview:3.4.8'
    implementation project(path: ':ruler')
    implementation project(path: ':jjdxm-ijkplayer')
    implementation project(path: ':videocache')
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion '28.0.0'
            }
        }
//        'com.googlecode.mp4parser:isoparser:1.0.6'
//        if (requested.group == 'com.googlecode.mp4parser') {
//            if (!requested.name.startsWith("multidex")) {
//                details.useVersion '1.0.6'
//            }
//        }
    }
}
